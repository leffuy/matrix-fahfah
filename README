This is a user project for math using both GIT, Wolfram Alpha, and C to 
produce basic matrix computations to solve a specific Hilbert Space problem.

==Matrix with Pointer Basics==
In memory a matrix is just a string of numbers of some size X.
However for us as humans to perceive them we require them to have dimensions.

So for Matrix size X,Y we'll have a string of numbers, X*Y long. For every Y
numbers you have a single row. 

In C you do this in the following.

Without malloc use an array of static mem. 
	
	float fArray[9];

Lets say it has size 3*3.

To get row 2 and the 1 column we'll want element 4. Which is the 3 slot of
memory (we start at 0). 

	float* fpointer = fArray;
	//*(fpointer + 3) will get you slot 3. Use your pointer arithmetic.
	

Anyhow you get the picture.

==Using the Library==

The Basics
First you need to have matrix data, which you either build in your program, or 
collect from a file. Either way this data needs to be in float form. This can
be a tad annoying since sometimes floating point operations aren't as precise
as we would like them to be. 


Hosted with Github. By Mitch and Stevie, and the Zipp who never shows.
